/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as JoinUsIndexImport } from './routes/join-us/index'
import { Route as GalleryIndexImport } from './routes/gallery/index'
import { Route as ApplyIndexImport } from './routes/apply/index'
import { Route as AboutIndexImport } from './routes/about/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const JoinUsIndexRoute = JoinUsIndexImport.update({
  id: '/join-us/',
  path: '/join-us/',
  getParentRoute: () => rootRoute,
} as any)

const GalleryIndexRoute = GalleryIndexImport.update({
  id: '/gallery/',
  path: '/gallery/',
  getParentRoute: () => rootRoute,
} as any)

const ApplyIndexRoute = ApplyIndexImport.update({
  id: '/apply/',
  path: '/apply/',
  getParentRoute: () => rootRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof rootRoute
    }
    '/apply/': {
      id: '/apply/'
      path: '/apply'
      fullPath: '/apply'
      preLoaderRoute: typeof ApplyIndexImport
      parentRoute: typeof rootRoute
    }
    '/gallery/': {
      id: '/gallery/'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof GalleryIndexImport
      parentRoute: typeof rootRoute
    }
    '/join-us/': {
      id: '/join-us/'
      path: '/join-us'
      fullPath: '/join-us'
      preLoaderRoute: typeof JoinUsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutIndexRoute
  '/apply': typeof ApplyIndexRoute
  '/gallery': typeof GalleryIndexRoute
  '/join-us': typeof JoinUsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutIndexRoute
  '/apply': typeof ApplyIndexRoute
  '/gallery': typeof GalleryIndexRoute
  '/join-us': typeof JoinUsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about/': typeof AboutIndexRoute
  '/apply/': typeof ApplyIndexRoute
  '/gallery/': typeof GalleryIndexRoute
  '/join-us/': typeof JoinUsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/apply' | '/gallery' | '/join-us'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/apply' | '/gallery' | '/join-us'
  id: '__root__' | '/' | '/about/' | '/apply/' | '/gallery/' | '/join-us/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutIndexRoute: typeof AboutIndexRoute
  ApplyIndexRoute: typeof ApplyIndexRoute
  GalleryIndexRoute: typeof GalleryIndexRoute
  JoinUsIndexRoute: typeof JoinUsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutIndexRoute: AboutIndexRoute,
  ApplyIndexRoute: ApplyIndexRoute,
  GalleryIndexRoute: GalleryIndexRoute,
  JoinUsIndexRoute: JoinUsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about/",
        "/apply/",
        "/gallery/",
        "/join-us/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about/": {
      "filePath": "about/index.tsx"
    },
    "/apply/": {
      "filePath": "apply/index.tsx"
    },
    "/gallery/": {
      "filePath": "gallery/index.tsx"
    },
    "/join-us/": {
      "filePath": "join-us/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
